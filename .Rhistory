rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
rzipois(1, lambda = lambda[j], pstr0 = p[j])
set.seed(20)
rzipois(1, lambda = lambda[1], pstr0 = p[1])
set.seed(20)
rzipois(1, lambda = lambda[1], pstr0 = p[1])
set.seed(20)
rzipois(1, lambda = lambda[1], pstr0 = p[1])
set.seed(20)
rzipois(1, lambda = lambda[1], pstr0 = p[1])
set.seed(20)
rzipois(1, lambda = lambda[1], pstr0 = p[1])
set.seed(20)
rzipois(1, lambda = lambda[1], pstr0 = p[1])
set.seed(20)
rzipois(1, lambda = lambda[1], pstr0 = p[1])
set.seed(20)
rzipois(1, lambda = lambda[1], pstr0 = p[1])
set.seed(20)
rzipois(1, lambda = lambda[1], pstr0 = p[1])
rzipois(100, lambda = lambda, pstr0 = p)
rzipois(1, lambda = lambda[2], pstr0 = p[2])
set.seed(20)
rzipois(1, lambda = lambda[2], pstr0 = p[2])
set.seed(20)
rzipois(1, lambda = lambda[2], pstr0 = p[2])
set.seed(20)
rzipois(1, lambda = lambda[2], pstr0 = p[2])
set.seed(20)
rzipois(1, lambda = lambda[2], pstr0 = p[2])
rzipois(100, lambda = lambda, pstr0 = p)
help("rzipois")
set.seed(20)
rzipois(1, lambda = lambda[2], pstr0 = p[2])
rzipois(100, lambda = lambda, pstr0 = p[2])
length(rzipois(100, lambda = lambda, pstr0 = p[2]))
rzipois(1, lambda = lambda, pstr0 = p[2])
rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
rzipois(n_muestra, lambda = lambda, pstr0 = p[2]) == rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
rzipois(n_muestra, lambda = lambda, pstr0 = p[2]) == rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
b <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
b <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
b <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
b <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
b <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
b <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
b <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
a1 == a2
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = p[1])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = p[2])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = p)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = p)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = p)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = p)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = p)
a1 == a2
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0)
dzipois(0:10, lambda, pstr0 = pstr0)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = -1)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = -1)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = -1)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = -1)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0.5)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0.2)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0.2)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0.4)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0.4)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = 0.4)
summary(p)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = p[1])
p
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = p[45])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = p[1])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = p[45])
a1 == a2
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a1 <- rzipois(n_muestra, lambda = lambda, pstr0 = p[1])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(n_muestra, lambda = lambda, pstr0 = p)
a1 == a2
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(1, lambda = lambda[1], pstr0 = p[1])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a3 <- rzipois(1, lambda = lambda[2], pstr0 = p[2])
lambda[1:10]
p[1:10]
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(1:10, lambda = lambda[1:10], pstr0 = p[1:10])
a1[1:10] == a2
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(1, lambda = lambda[7], pstr0 = p[7]) ; a1[7] == a2
rzipois(1,lambda, p)
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(1, lambda = lambda[7], pstr0 = p[7])
a1[7] == a2
######### Funcion Multiples simulaciones ###########################
sim_conf_mat_zeroinfl2 <- function(mod, res=CData_CDMX2$Vic_Rob_As, n=100,
muest.size=n_muestra){
# Cargamos los valores estimados para p y lambda
p <- predict(mod, type = "zero") # Proba de 0
lambda <- predict(mod, type = "count") # Esperanza de la cuenta
aux <- rep(0, times = n) # Vector que almacenara la prop de exito
sim <- array(NA, dim = c(muest.size))
# Ciclo para simular
for (i in 1:n) {
for (j in 1:muest.size) {
sim[,j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
# Simulaciones
conf <- table(sim, res) # Matriz de confusion
aux[i] <- sum(diag(conf))/muest.size # Guardamos la proporcion de exito
}
return(mean(sim)) # Proporcion de exito promedio
}
sim_conf_mat_zeroinfl2(mod_dist_4, n = 100)
#####  Aplicamos diferente num de simulaciones #####################
sim_conf_mat_zeroinfl2(mod_dist_4, n = 1)        # 0.6822144
for (j in 1:n_muestra) {
sim[,j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
rzipois(1, lambda = lambda[j], pstr0 = p[j])
######### Funcion Multiples simulaciones ###########################
sim_conf_mat_zeroinfl2 <- function(mod, res=CData_CDMX2$Vic_Rob_As, n=100,
muest.size=n_muestra){
# Cargamos los valores estimados para p y lambda
p <- predict(mod, type = "zero") # Proba de 0
lambda <- predict(mod, type = "count") # Esperanza de la cuenta
aux <- rep(0, times = n) # Vector que almacenara la prop de exito
sim <- array(NA, dim = c(muest.size))
# Ciclo para simular
for (i in 1:n) {
for (j in 1:muest.size) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
# Simulaciones
conf <- table(sim, res) # Matriz de confusion
aux[i] <- sum(diag(conf))/muest.size # Guardamos la proporcion de exito
}
return(mean(sim)) # Proporcion de exito promedio
}
#####  Aplicamos diferente num de simulaciones #####################
sim_conf_mat_zeroinfl2(mod_dist_4, n = 100)        # 0.6822144
#####  Aplicamos diferente num de simulaciones #####################
sim_conf_mat_zeroinfl2(mod_dist_4, n = 1)        # 0.6822144
for (j in 1:n_muestra) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
sim
summary(sim)
conf <- table(sim, CData_CDMX2$Vic_Rob_As)
conf
sum(diag(conf))/n_muestra
aux <- rep(0, times = 10)
aux[1] <- sum(diag(conf))/n_muestra
for (j in 1:n_muestra) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
table(sim, CData_CDMX2$Vic_Rob_As)
conf <- table(sim, CData_CDMX2$Vic_Rob_As)
aux[1] <- sum(diag(conf))/n_muestra
for (j in 1:n_muestra) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
table(sim, CData_CDMX2$Vic_Rob_As)
conf <- table(sim, CData_CDMX2$Vic_Rob_As)
aux[2] <- sum(diag(conf))/n_muestra # Guardamos la proporcion de exito
for (j in 1:n_muestra) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
table(sim, CData_CDMX2$Vic_Rob_As)
conf <- table(sim, CData_CDMX2$Vic_Rob_As) # Matriz de confusion
aux[3] <- sum(diag(conf))/n_muestra
######### Funcion Multiples simulaciones ###########################
sim_conf_mat_zeroinfl2 <- function(mod, res=CData_CDMX2$Vic_Rob_As, n=100,
muest.size=n_muestra){
# Cargamos los valores estimados para p y lambda
p <- predict(mod, type = "zero") # Proba de 0
lambda <- predict(mod, type = "count") # Esperanza de la cuenta
aux <- rep(0, times = n) # Vector que almacenara la prop de exito
sim <- array(NA, dim = c(muest.size))
# Ciclo para simular
for (i in 1:n) {
for (j in 1:muest.size) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
# Simulaciones
conf <- table(sim, res) # Matriz de confusion
aux[i] <- sum(diag(conf))/muest.size # Guardamos la proporcion de exito
}
return(mean(aux)) # Proporcion de exito promedio
}
#####  Aplicamos diferente num de simulaciones #####################
sim_conf_mat_zeroinfl2(mod_dist_4, n = 1)        # 0.6822144
#####  Aplicamos diferente num de simulaciones #####################
sim_conf_mat_zeroinfl2(mod_dist_4, n = 10)        # 0.6822144
mean(CData_CDMX2$Vic_Rob_As)
######### Funcion Multiples simulaciones TERCERA versión###########################
sim_conf_mat_zeroinfl2 <- function(mod, res=CData_CDMX2$Vic_Rob_As,
muest.size=n_muestra){
# Cargamos los valores estimados para p y lambda
p <- predict(mod, type = "zero") # Proba de 0
lambda <- predict(mod, type = "count") # Esperanza de la cuenta
sim <- array(NA, dim = c(muest.size))
# Ciclo para simular
for (j in 1:muest.size) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
#   # Simulaciones
#   conf <- table(sim, res) # Matriz de confusion
#   aux[i] <- sum(diag(conf))/muest.size # Guardamos la proporcion de exito
# }
return(mean(sim)) # Proporcion de exito promedio
}
######### Funcion Multiples simulaciones TERCERA versión###########################
sim_conf_mat_zeroinfl3 <- function(mod, res=CData_CDMX2$Vic_Rob_As,
muest.size=n_muestra){
# Cargamos los valores estimados para p y lambda
p <- predict(mod, type = "zero") # Proba de 0
lambda <- predict(mod, type = "count") # Esperanza de la cuenta
sim <- array(NA, dim = c(muest.size))
# Ciclo para simular
for (j in 1:muest.size) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
#   # Simulaciones
#   conf <- table(sim, res) # Matriz de confusion
#   aux[i] <- sum(diag(conf))/muest.size # Guardamos la proporcion de exito
# }
return(mean(sim)) # Proporcion de exito promedio
}
######### Funcion Multiples simulaciones TERCERA versión###########################
sim_conf_mat_zeroinfl3 <- function(mod, muest.size=n_muestra){
# Cargamos los valores estimados para p y lambda
p <- predict(mod, type = "zero") # Proba de 0
lambda <- predict(mod, type = "count") # Esperanza de la cuenta
sim <- array(NA, dim = c(muest.size))
# Ciclo para simular
for (j in 1:muest.size) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
#   # Simulaciones
#   conf <- table(sim, res) # Matriz de confusion
#   aux[i] <- sum(diag(conf))/muest.size # Guardamos la proporcion de exito
# }
return(mean(sim)) # Proporcion de exito promedio
}
sim_conf_mat_zeroinfl3(mod_dist_4, n = 10); mean(CData_CDMX2$Vic_Rob_As)
sim_conf_mat_zeroinfl3(mod_dist_4); mean(CData_CDMX2$Vic_Rob_As)
# Tamaño de muestra
n_muestra <- dim(CData_CDMX2[1])[1]
# Cargamos modelo ganador
mod_dist_4 <- zeroinfl(Vic_Rob_As ~ Seg_Mun  + Region |
Edad + Mas_Pat_Vil + Region + Sit_Lab,
data= CData_CDMX2, dist="poisson",link="logit")
summary(mod_dist_4)
a1
set.seed(20)
pr <- rzipois(1, lambda = lambda[7], pstr0 = p[7])
set.seed(20)
a2 <- rzipois(1, lambda = lambda[7], pstr0 = p[7])
library(tidyverse)
library(corrplot)
library(polycor)
library(glm2)
library(pscl)
library(boot)
library(VGAM)
set.seed(20)
pr <- rzipois(1, lambda = lambda[7], pstr0 = p[7])
set.seed(20)
a2 <- rzipois(1, lambda = lambda[7], pstr0 = p[7])
rzipois(1, lambda = lambda, pstr0 = p)
length(a2)
a2 <- rzipois(2, lambda = lambda[7], pstr0 = p[7])
set.seed(20)
# rzipois(1, lambda = lambda[2], pstr0 = p[2])
a2 <- rzipois(2, lambda = lambda[7], pstr0 = p[7])
length(a2)
set.seed(20)
a1 <- rzipois(1, lambda = lambda, pstr0 = p)
length(a1)
set.seed(20)
a1 <- rzipois(2, lambda = lambda, pstr0 = p)
length(a1)
sim_conf_mat_zeroinfl3(mod_dist_4); mean(CData_CDMX2$Vic_Rob_As)
sim_conf_mat_zeroinfl3(mod_dist_4); mean(CData_CDMX2$Vic_Rob_As)
sim_conf_mat_zeroinfl3(mod_dist_4); mean(CData_CDMX2$Vic_Rob_As)
sim_conf_mat_zeroinfl2(mod_dist_4);
######### Funcion Multiples simulaciones SEGUNDA versión###########################
sim_conf_mat_zeroinfl2 <- function(mod, res=CData_CDMX2$Vic_Rob_As, n=100,
muest.size=n_muestra){
# Cargamos los valores estimados para p y lambda
p <- predict(mod, type = "zero") # Proba de 0
lambda <- predict(mod, type = "count") # Esperanza de la cuenta
aux <- rep(0, times = n) # Vector que almacenara la prop de exito
sim <- array(NA, dim = c(muest.size))
# Ciclo para simular
for (i in 1:n) {
for (j in 1:muest.size) {
sim[j] <- rzipois(1, lambda = lambda[j], pstr0 = p[j])
}
# Simulaciones
conf <- table(sim, res) # Matriz de confusion
aux[i] <- sum(diag(conf))/muest.size # Guardamos la proporcion de exito
}
return(mean(aux)) # Proporcion de exito promedio
}
sim_conf_mat_zeroinfl2(mod_dist_4, n =10)
sim_conf_mat_zeroinfl2(mod_dist_4, n =10)
sim_conf_mat_zeroinfl2(mod_dist_4, n =10)
sim_conf_mat_zeroinfl2(mod_dist_4, n =100)
#####  Aplicamos diferente num de simulaciones #####################
sim_conf_mat_zeroinfl2(mod_dist_4, n =100); mean(CData_CDMX2$Vic_Rob_As) # 0.6822144
library(rjags)
library(tidyverse)
model.matrix(mod_dist_4)
mod_dist_4.matrix <-  model.matrix(mod_dist_4)
head(mod_dist_4.matrix)
data.frame(mod_dist_4.matrix[,-1])
summary(mod_dist_4)
mod_dist_4$vcov
head(mod_dist_4.matrix)
mod_dist_4.matrix_b <- model.matrix(CData_CDMX2$Vic_Rob_As ~ CData_CDMX2$Edad + CData_CDMX2$Mas_Pat_Vil +
CData_CDMX2$Region + CData_CDMX2$Sit_Lab)
head(mod_dist_4.matrix_b)
mod_dist_4.matrix_b
data.frame(mod_dist_4.matrix_p[,-1], mod_dist_4.matrix_b[-1])
mod_dist_4.matrix_p <-  model.matrix(mod_dist_4)
mod_dist_4.matrix_b <- model.matrix(CData_CDMX2$Vic_Rob_As ~ CData_CDMX2$Edad + CData_CDMX2$Mas_Pat_Vil +
CData_CDMX2$Region + CData_CDMX2$Sit_Lab)
mod_dist_4.matrix_p[,-1], mod_dist_4.matrix_b[-1])
data.frame(mod_dist_4.matrix_p[,-1], mod_dist_4.matrix_b[,-1])
mod_dist_4.matrix_p <-  model.matrix(mod_dist_4)
mod_dist_4.matrix_b <- model.matrix(CData_CDMX2$Vic_Rob_As ~ CData_CDMX2$Edad + CData_CDMX2$Mas_Pat_Vil + CData_CDMX2$Sit_Lab)
mod_dist_4.matrix_list <- as.list(data.frame(mod_dist_4.matrix_p[,-1], mod_dist_4.matrix_b[,-1]))
data.frame(mod_dist_4.matrix_p[,-1], mod_dist_4.matrix_b[,-1])
summary(mod_dist_4)
mod_dist_4.matrix <- model.matrix(Vic_Rob_As ~ Seg_Mun  + Region |
Edad + Mas_Pat_Vil + Region + Sit_Lab)
mod_dist_4.matrix <- model.matrix(CData_CDMX2$Vic_Rob_As ~ CData_CDMX2$Seg_Mun  + CData_CDMX2$Region |
CData_CDMX2$Edad + CData_CDMX2$Mas_Pat_Vil + CData_CDMX2$Region + CData_CDMX2$Sit_Lab)
head(mod_dist_4.matrix)
mod_dist_4.matrix <- model.matrix(CData_CDMX2$Vic_Rob_As ~ CData_CDMX2$Seg_Mun
CData_CDMX2$Edad + CData_CDMX2$Mas_Pat_Vil + CData_CDMX2$Region + CData_CDMX2$Sit_Lab)
mod_dist_4.matrix <- model.matrix(CData_CDMX2$Vic_Rob_As ~ CData_CDMX2$Seg_Mun +
CData_CDMX2$Edad + CData_CDMX2$Mas_Pat_Vil + CData_CDMX2$Region + CData_CDMX2$Sit_Lab)
head(mod_dist_4.matrix)
mod_dist_4.matrix_list <- as.list(data.frame(mod_dist_4))
mod_dist_4.matrix_list <- as.list(data.frame(mod_dist_4.matrix))
attach(CData_CDMX2)
data <- list(
y = Vic_Rob_As,
x1 = mod_dist_4.matrix_list$CData_CDMX2.Seg_Mun2,
x21 = mod_dist_4.matrix_list$CData_CDMX2.RegionSur,
x22 = mod_dist_4.matrix_list$CData_CDMX2.RegionNorte,
x23 = mod_dist_4.matrix_list$CData_CDMX2.RegionOriente,
x3 = mod_dist_4.matrix_list$CData_CDMX2.Edad,
x4 = mod_dist_4.matrix_list$CData_CDMX2.Mas_Pat_Vil2,
x5 = mod_dist_4.matrix_list$CData_CDMX2.Sit_LabSin.Ocupación,
x6 = mod_dist_4.matrix_list$CData_CDMX2.Sit_LabEstudiantes.y.Domésticos
n =length(Vic_Rob_As)
)
data <- list(
y = Vic_Rob_As,
x1 = mod_dist_4.matrix_list$CData_CDMX2.Seg_Mun2,
x21 = mod_dist_4.matrix_list$CData_CDMX2.RegionSur,
x22 = mod_dist_4.matrix_list$CData_CDMX2.RegionNorte,
x23 = mod_dist_4.matrix_list$CData_CDMX2.RegionOriente,
x3 = mod_dist_4.matrix_list$CData_CDMX2.Edad,
x4 = mod_dist_4.matrix_list$CData_CDMX2.Mas_Pat_Vil2,
x5 = mod_dist_4.matrix_list$CData_CDMX2.Sit_LabSin.Ocupación,
x6 = mod_dist_4.matrix_list$CData_CDMX2.Sit_LabEstudiantes.y.Domésticos,
n =length(Vic_Rob_As)
)
View(data)
data <- list(
y = Vic_Rob_As,
x1 = mod_dist_4.matrix_list$CData_CDMX2.Seg_Mun2,
x21 = mod_dist_4.matrix_list$CData_CDMX2.RegionSur,
x22 = mod_dist_4.matrix_list$CData_CDMX2.RegionNorte,
x23 = mod_dist_4.matrix_list$CData_CDMX2.RegionOriente,
x3 = mod_dist_4.matrix_list$CData_CDMX2.Edad,
x4 = mod_dist_4.matrix_list$CData_CDMX2.Mas_Pat_Vil2,
x51 = mod_dist_4.matrix_list$CData_CDMX2.Sit_LabSin.Ocupación,
x52 = mod_dist_4.matrix_list$CData_CDMX2.Sit_LabEstudiantes.y.Domésticos,
n =length(Vic_Rob_As)
)
mod_dist_4.matrix_list[1,2]
